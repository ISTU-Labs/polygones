#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Lab2New
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Figures")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Определения метода расширяемости
    partial void OnCreated();
    partial void InsertCircles(Circles instance);
    partial void UpdateCircles(Circles instance);
    partial void DeleteCircles(Circles instance);
    partial void InsertPolygons(Polygons instance);
    partial void UpdatePolygons(Polygons instance);
    partial void DeletePolygons(Polygons instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::Lab2New.Properties.Settings.Default.FiguresConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Circles> Circles
		{
			get
			{
				return this.GetTable<Circles>();
			}
		}
		
		public System.Data.Linq.Table<Polygons> Polygons
		{
			get
			{
				return this.GetTable<Polygons>();
			}
		}
		
		public System.Data.Linq.Table<Rectangles> Rectangles
		{
			get
			{
				return this.GetTable<Rectangles>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.add_circles")]
		public int add_circles([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Y", DbType="Int")] System.Nullable<int> y, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="X", DbType="Int")] System.Nullable<int> x, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Degree", DbType="Int")] System.Nullable<int> degree, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Size", DbType="Int")] System.Nullable<int> size)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), y, x, degree, size);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.add_polygons")]
		public int add_polygons([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Count", DbType="Int")] System.Nullable<int> count, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Y", DbType="Int")] System.Nullable<int> y, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="X", DbType="Int")] System.Nullable<int> x, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Degree", DbType="Int")] System.Nullable<int> degree, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Size", DbType="Int")] System.Nullable<int> size)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), count, y, x, degree, size);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.add_rectangle")]
		public int add_rectangle([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Coef", DbType="Int")] System.Nullable<int> coef, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Y", DbType="Int")] System.Nullable<int> y, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="X", DbType="Int")] System.Nullable<int> x, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Degree", DbType="Int")] System.Nullable<int> degree, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Size", DbType="Int")] System.Nullable<int> size)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), coef, y, x, degree, size);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.del_circles")]
		public int del_circles([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Y", DbType="Int")] System.Nullable<int> y, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="X", DbType="Int")] System.Nullable<int> x, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Degree", DbType="Int")] System.Nullable<int> degree, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Size", DbType="Int")] System.Nullable<int> size)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), y, x, degree, size);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.del_polygons")]
		public int del_polygons([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Count", DbType="Int")] System.Nullable<int> count, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Y", DbType="Int")] System.Nullable<int> y, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="X", DbType="Int")] System.Nullable<int> x, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Degree", DbType="Int")] System.Nullable<int> degree, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Size", DbType="Int")] System.Nullable<int> size)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), count, y, x, degree, size);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.del_rectangle")]
		public int del_rectangle([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Coef", DbType="Int")] System.Nullable<int> coef, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Y", DbType="Int")] System.Nullable<int> y, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="X", DbType="Int")] System.Nullable<int> x, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Degree", DbType="Int")] System.Nullable<int> degree, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Size", DbType="Int")] System.Nullable<int> size)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), coef, y, x, degree, size);
			return ((int)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Circles")]
	public partial class Circles : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _Y;
		
		private int _X;
		
		private int _Degree;
		
		private double _Size;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnYChanging(int value);
    partial void OnYChanged();
    partial void OnXChanging(int value);
    partial void OnXChanged();
    partial void OnDegreeChanging(int value);
    partial void OnDegreeChanged();
    partial void OnSizeChanging(double value);
    partial void OnSizeChanged();
    #endregion
		
		public Circles()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Y", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Y
		{
			get
			{
				return this._Y;
			}
			set
			{
				if ((this._Y != value))
				{
					this.OnYChanging(value);
					this.SendPropertyChanging();
					this._Y = value;
					this.SendPropertyChanged("Y");
					this.OnYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_X", DbType="Int NOT NULL")]
		public int X
		{
			get
			{
				return this._X;
			}
			set
			{
				if ((this._X != value))
				{
					this.OnXChanging(value);
					this.SendPropertyChanging();
					this._X = value;
					this.SendPropertyChanged("X");
					this.OnXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Degree", DbType="Int NOT NULL")]
		public int Degree
		{
			get
			{
				return this._Degree;
			}
			set
			{
				if ((this._Degree != value))
				{
					this.OnDegreeChanging(value);
					this.SendPropertyChanging();
					this._Degree = value;
					this.SendPropertyChanged("Degree");
					this.OnDegreeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Size", DbType="Float NOT NULL")]
		public double Size
		{
			get
			{
				return this._Size;
			}
			set
			{
				if ((this._Size != value))
				{
					this.OnSizeChanging(value);
					this.SendPropertyChanging();
					this._Size = value;
					this.SendPropertyChanged("Size");
					this.OnSizeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Polygons")]
	public partial class Polygons : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdPol;
		
		private int _Count;
		
		private int _Y;
		
		private int _X;
		
		private int _Degree;
		
		private double _Size;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdPolChanging(int value);
    partial void OnIdPolChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnYChanging(int value);
    partial void OnYChanged();
    partial void OnXChanging(int value);
    partial void OnXChanged();
    partial void OnDegreeChanging(int value);
    partial void OnDegreeChanged();
    partial void OnSizeChanging(double value);
    partial void OnSizeChanged();
    #endregion
		
		public Polygons()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdPol", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int IdPol
		{
			get
			{
				return this._IdPol;
			}
			set
			{
				if ((this._IdPol != value))
				{
					this.OnIdPolChanging(value);
					this.SendPropertyChanging();
					this._IdPol = value;
					this.SendPropertyChanged("IdPol");
					this.OnIdPolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Y", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Y
		{
			get
			{
				return this._Y;
			}
			set
			{
				if ((this._Y != value))
				{
					this.OnYChanging(value);
					this.SendPropertyChanging();
					this._Y = value;
					this.SendPropertyChanged("Y");
					this.OnYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_X", DbType="Int NOT NULL")]
		public int X
		{
			get
			{
				return this._X;
			}
			set
			{
				if ((this._X != value))
				{
					this.OnXChanging(value);
					this.SendPropertyChanging();
					this._X = value;
					this.SendPropertyChanged("X");
					this.OnXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Degree", DbType="Int NOT NULL")]
		public int Degree
		{
			get
			{
				return this._Degree;
			}
			set
			{
				if ((this._Degree != value))
				{
					this.OnDegreeChanging(value);
					this.SendPropertyChanging();
					this._Degree = value;
					this.SendPropertyChanged("Degree");
					this.OnDegreeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Size", DbType="Float NOT NULL")]
		public double Size
		{
			get
			{
				return this._Size;
			}
			set
			{
				if ((this._Size != value))
				{
					this.OnSizeChanging(value);
					this.SendPropertyChanging();
					this._Size = value;
					this.SendPropertyChanged("Size");
					this.OnSizeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Rectangles")]
	public partial class Rectangles
	{
		
		private int _IdRec;
		
		private double _Coef;
		
		private int _Y;
		
		private int _X;
		
		private int _Degree;
		
		private double _Size;
		
		public Rectangles()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdRec", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int IdRec
		{
			get
			{
				return this._IdRec;
			}
			set
			{
				if ((this._IdRec != value))
				{
					this._IdRec = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Coef", DbType="Float NOT NULL")]
		public double Coef
		{
			get
			{
				return this._Coef;
			}
			set
			{
				if ((this._Coef != value))
				{
					this._Coef = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Y", DbType="Int NOT NULL")]
		public int Y
		{
			get
			{
				return this._Y;
			}
			set
			{
				if ((this._Y != value))
				{
					this._Y = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_X", DbType="Int NOT NULL")]
		public int X
		{
			get
			{
				return this._X;
			}
			set
			{
				if ((this._X != value))
				{
					this._X = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Degree", DbType="Int NOT NULL")]
		public int Degree
		{
			get
			{
				return this._Degree;
			}
			set
			{
				if ((this._Degree != value))
				{
					this._Degree = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Size", DbType="Float NOT NULL")]
		public double Size
		{
			get
			{
				return this._Size;
			}
			set
			{
				if ((this._Size != value))
				{
					this._Size = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
